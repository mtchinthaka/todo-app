[{"D:\\Chinthaka Manathunga\\Intellij Idea Workspace\\todo-app\\src\\index.tsx":"1","D:\\Chinthaka Manathunga\\Intellij Idea Workspace\\todo-app\\src\\reportWebVitals.ts":"2","D:\\Chinthaka Manathunga\\Intellij Idea Workspace\\todo-app\\src\\App.tsx":"3","D:\\Chinthaka Manathunga\\Intellij Idea Workspace\\todo-app\\src\\components\\todo\\list\\TodoList.tsx":"4","D:\\Chinthaka Manathunga\\Intellij Idea Workspace\\todo-app\\src\\components\\todo\\add\\AddTodo.tsx":"5","D:\\Chinthaka Manathunga\\Intellij Idea Workspace\\todo-app\\src\\components\\todo\\list\\Footer.tsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":2945,"mtime":1611047956154,"results":"10","hashOfConfig":"8"},{"size":1758,"mtime":1611043526045,"results":"11","hashOfConfig":"8"},{"size":566,"mtime":1611043037231,"results":"12","hashOfConfig":"8"},{"size":1503,"mtime":1611046341107,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"o09rp6",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"D:\\Chinthaka Manathunga\\Intellij Idea Workspace\\todo-app\\src\\index.tsx",[],["30","31"],"D:\\Chinthaka Manathunga\\Intellij Idea Workspace\\todo-app\\src\\reportWebVitals.ts",[],"D:\\Chinthaka Manathunga\\Intellij Idea Workspace\\todo-app\\src\\App.tsx",[],"D:\\Chinthaka Manathunga\\Intellij Idea Workspace\\todo-app\\src\\components\\todo\\list\\TodoList.tsx",["32"],"import React from 'react';\r\nimport { Button, Table } from 'antd';\r\nimport Todo from \"../../../types/Todo\";\r\nimport Footer from \"./Footer\";\r\n\r\ninterface TodoListProps {\r\n    currentFilter: string;\r\n    todos: Todo[];\r\n    todosLoading: boolean;\r\n    onToggleTodo: (todo: Todo) => void;\r\n    onDeleteTodo: (todo: Todo) => void;\r\n    onUpdateFilter: (filter: string) => void;\r\n}\r\n\r\nexport default ({ currentFilter, todos, todosLoading, onToggleTodo, onDeleteTodo, onUpdateFilter }: TodoListProps) => {\r\n    const columns = [{\r\n        key: 'complete',\r\n        width: '10%',\r\n        render: (text: string, record: Todo) => (\r\n            <input type=\"checkbox\" defaultChecked={record.completed} onClick={() => onToggleTodo(record)} />\r\n        )\r\n    }, {\r\n        key: 'title',\r\n        title: 'Thing to do',\r\n        render: (text: string, record: Todo) => (\r\n            <span>\r\n        <span style={{fontWeight: 'bold'}}>{record.order}.</span>\r\n        <span className={record.completed ? 'completed' : 'active'}>{record.title}</span>\r\n      </span>\r\n        )\r\n    }, {\r\n        key: 'delete',\r\n        width: '10%',\r\n        render: (text: string, record: Todo) => (\r\n            <span style={{width: '100%', textAlign: 'right'}} onClick={() => onDeleteTodo(record)}>\r\n        <Button>Delete</Button>\r\n      </span>\r\n        )\r\n    }];\r\n\r\n    return (\r\n        <Table\r\n            rowKey={(record: Todo) => record.id.toString()}\r\n            columns={columns}\r\n            dataSource={todos}\r\n            bordered={true}\r\n            pagination={false}\r\n            loading={todosLoading}\r\n            size=\"middle\"\r\n            footer={() => <Footer currentFilter={currentFilter} todos={todos} onFilterChange={onUpdateFilter} />}\r\n        />\r\n    );\r\n};","D:\\Chinthaka Manathunga\\Intellij Idea Workspace\\todo-app\\src\\components\\todo\\add\\AddTodo.tsx",["33"],"import React from 'react';\r\nimport {Input} from \"antd\";\r\n\r\ninterface AddTodoProps {\r\n    onNewTodo: (title: string) => void;\r\n}\r\n\r\nexport default ({onNewTodo}: AddTodoProps) => {\r\n    const keyHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter' && onNewTodo) {\r\n            onNewTodo(e.currentTarget.value);\r\n            e.currentTarget.value = '';\r\n        }\r\n    };\r\n\r\n    return (<Input autoFocus={true} type=\"text\" className=\"form-control\" placeholder=\"Add your next task ...\"\r\n                   onKeyUp={keyHandler}/>);\r\n};","D:\\Chinthaka Manathunga\\Intellij Idea Workspace\\todo-app\\src\\components\\todo\\list\\Footer.tsx",["34"],"import React from 'react';\r\nimport Todo from \"../../../types/Todo\";\r\nimport {Button} from \"antd\";\r\n\r\ninterface FooterProps{\r\n    todos: Todo[];\r\n    currentFilter: string;\r\n    onFilterChange: (filter:string)=>void;\r\n}\r\n\r\nexport default ({ currentFilter, todos, onFilterChange }: FooterProps) => {\r\n    const outstanding = todos.filter(todo => !todo.completed).length;\r\n    const getButtonType = (type: string) => currentFilter === type ? 'primary' : undefined;\r\n\r\n    return (\r\n        <div>\r\n            <div style={{width: '60%', display: 'inline-block'}}>\r\n                {outstanding} items found.\r\n            </div>\r\n            <div style={{width: '40%', display: 'inline-block', textAlign: 'right'}}>\r\n                <Button\r\n                    type={getButtonType('ALL')}\r\n                    style={{marginRight: '10px'}}\r\n                    onClick={() => onFilterChange('ALL')}\r\n                >\r\n                    All\r\n                </Button>\r\n\r\n                <Button\r\n                    type={getButtonType('ACTIVE')}\r\n                    style={{marginRight: '10px'}}\r\n                    onClick={() => onFilterChange('ACTIVE')}\r\n                >\r\n                    Active\r\n                </Button>\r\n\r\n                <Button\r\n                    type={getButtonType('COMPLETED')}\r\n                    onClick={() => onFilterChange('COMPLETED')}\r\n                >\r\n                    Completed\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":15,"column":1,"nodeType":"41","endLine":53,"endColumn":3},{"ruleId":"39","severity":1,"message":"40","line":8,"column":1,"nodeType":"41","endLine":18,"endColumn":3},{"ruleId":"39","severity":1,"message":"40","line":11,"column":1,"nodeType":"41","endLine":46,"endColumn":3},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]